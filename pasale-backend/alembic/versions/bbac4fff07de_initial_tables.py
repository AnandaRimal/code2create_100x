"""initial tables

Revision ID: bbac4fff07de
Revises: 
Create Date: 2025-11-01 02:37:01.298179

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bbac4fff07de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('shopkeepers',
    sa.Column('shop_id', sa.String(length=36), nullable=False),
    sa.Column('shop_name', sa.String(length=255), nullable=False),
    sa.Column('shop_address', sa.String(length=255), nullable=True),
    sa.Column('contact', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=True),
    sa.Column('pan', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_sync', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('shop_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('pan')
    )
    op.create_table('categories',
    sa.Column('category_id', sa.String(length=36), nullable=False),
    sa.Column('shop_id', sa.String(length=36), nullable=False),
    sa.Column('category_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shopkeepers.shop_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('products',
    sa.Column('product_id', sa.String(length=36), nullable=False),
    sa.Column('shop_id', sa.String(length=36), nullable=False),
    sa.Column('product_name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shopkeepers.shop_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('sync_logs',
    sa.Column('sync_id', sa.String(length=36), nullable=False),
    sa.Column('shop_id', sa.String(length=36), nullable=False),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('last_sync_time', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('records_uploaded', sa.Integer(), nullable=True),
    sa.Column('records_downloaded', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', name='syncstatus'), nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['shopkeepers.shop_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sync_id')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.String(length=36), nullable=False),
    sa.Column('shop_id', sa.String(length=36), nullable=False),
    sa.Column('product_id', sa.String(length=36), nullable=True),
    sa.Column('date_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('type', sa.Enum('SALE', 'PURCHASE', 'RETURN', name='transactiontype'), nullable=False),
    sa.Column('synced', sa.Boolean(), nullable=True),
    sa.Column('device_id', sa.String(length=255), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.product_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['shop_id'], ['shopkeepers.shop_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('rewards',
    sa.Column('reward_id', sa.String(length=36), nullable=False),
    sa.Column('shop_id', sa.String(length=36), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('source_txn_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['shop_id'], ['shopkeepers.shop_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_txn_id'], ['transactions.transaction_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('reward_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rewards')
    op.drop_table('transactions')
    op.drop_table('sync_logs')
    op.drop_table('products')
    op.drop_table('categories')
    op.drop_table('shopkeepers')
    # ### end Alembic commands ###
